---
- name: Get current az app secrets
  azure.azcollection.azure_rm_adpassword_info:
    app_id: "{{ az_app_id }}"
  register: azure_ad_app_current_pws

- name: Get valid az app secrets
  ansible.builtin.set_fact:
    az_app_valid_pws: "{{ (az_app_valid_pws | default([], true)) + [item.key_id] }}"
  loop: "{{ azure_ad_app_current_pws.passwords }}"
  when:
    - azure_ad_app_current_pws.passwords | length > 0
    - (item.end_date | to_datetime("%Y-%m-%dT%H:%M:%S%z") - ansible_date_time.iso8601_micro | to_datetime("%Y-%m-%dT%H:%M:%S.%f%z")).days | int > az_app_expiring_days

- name: Get expired az app secrets
  ansible.builtin.set_fact:
    az_app_expired_pws: "{{ (az_app_expired_pws | default([], true)) + [item.key_id] }}"
  loop: "{{ azure_ad_app_current_pws.passwords }}"
  when:
    - azure_ad_app_current_pws.passwords | length > 0
    - (item.end_date | to_datetime("%Y-%m-%dT%H:%M:%S%z") - ansible_date_time.iso8601_micro | to_datetime("%Y-%m-%dT%H:%M:%S.%f%z")).days | int < 0

- name: Create new Azure AD App secret
  azure.azcollection.azure_rm_adpassword:
    app_id: "{{ az_app_id }}"
    state: present
    display_name: "{{ ansible_date_time.date }}"
    end_date: "{{ '%Y-%m-%d' | strftime((ansible_date_time.epoch | int) + (86400 * az_app_new_password_days_valid)) }}"
  no_log: true
  register: az_app_new_password
  when: (azure_ad_app_current_pws.passwords | length == 0) or (az_app_valid_pws is undefined) or (az_app_valid_pws | length == 0)

- name: Remove expired Azure AD App secrets
  azure.azcollection.azure_rm_adpassword:
    app_id: "{{ az_app_id }}"
    key_id: "{{ item }}"
    state: absent
  loop: "{{ az_app_expired_pws }}"
  when:
    - az_app_expired_pws is defined
    - az_app_expired_pws | length > 0
